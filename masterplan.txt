Checklist:
	Core checklist
	Done C1. Admin login and user login
		Done C1.1. A login/register form with fields like username, password, etc. for sponsor, influencer and admin login.
		Done C1.2. The application should have only one admin identified by its role.
		Done C1.3. Use either Flask security or JWT based Token based authentication to implement role based access control.
		Done C1.4. The app must have a suitable model to store and differentiate all the types of users of the app.
	Done C2. Admin dashboard - for the Admin
		Done C2.1. The admin should be automatically added whenever a new database is created.
		Done C2.2. Every new sponsor signup should be approved by the admin.
			Done C2.2.1. The request should automatically go to the admin's dashboard for approval.
		Done C2.3. The application must have an admin dashboard which displays all the relevant statistics of the application, eg active users, campaigns(public/private), ad requests and their status, flagged sponsors/influencers, etc.
	C3. Campaign management - for the Sponsors
		C3.1. Create a new campaign and categorize into different niches.
		C3.2. Update an existing campaign - eg start_date, end_date, budget and/or other fields.
		C3.3. Delete an existing campaign.
	C4. Ad request management - for the Sponsors.
		C4.1. Create ad requests based on the goals on the campaign.
		C4.2. Edit an existing ad request - eg influencer_id, requirements, payment_amount, status.
		C4.3. Delete an existing ad request.
	C5. Search for influencers, public campaigns.
		C5.1. The sponsors should be able to search for relevant influencers based on their niche, reach, followers, etc.
		C5.2. The influencers should be able to search for public campaigns based on their niche, relevance, etc.
	C6. Take action on a particular ad request - for the Influencers.
		C6.1. Ability to view all the ad requests from all the campaigns.
		C6.2. Ability to accept/reject a particular ad request.
		C6.3. Ability to negotiate the payment_amount for a particular ad.
	C7. Backend jobs.
		C7.1. Scheduled job - Daily reminders - The application should send daily reminders to influencers on g-chat using Google Chat Webhooks or SMS or mail. 
		C7.2. Scheduled job - Monthly activity reports - Devise a monthly report for the sponsors created using HTML and sent via email.
		C7.3. User triggered async job - Export as CSV - Devise a CSV format details for the campaigns(public/private) created by the sponsor.
	C8. Performance and caching.
		C8.1. Add caching where required to increase the performance.
		C8.2. Add cache expiry.
		C8.3. API performance. 
	Recommended checklist:
	R1. Well designed PDF reports for Monthly activity report.
	R2. External APIs/libraries for creating charts, eg ChartJS.
	R3. Single responsive UI for both Mobile and Desktop.
		R3.1. Unified UI that works across devices.
		R3.2. Add to desktop feature.
	R4. Implementing frontend validation on all the form fields using HTML5 form validation on Javascript.
	R5. Implementing backend validation within your APIs.
	Optional checklist:
	O1. Provide styling and aesthetics to your application by creating a beautiful and responsive frontend using simple CSS or Bootstrap.
	O2. Incorporate a proper login system to prevent unauthorized access to the app using flask extensions like flask_login, flask_security, etc.
	O3. Implement a dummy payment portal(just a view taking payment details from sponsors for an ad request)
	O4. Any additional feature you feel is appropriate for the application.